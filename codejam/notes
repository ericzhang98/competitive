think out loud, pretend I'm a genius, what would a god do?
if I get stuck, just write down what I know, some small potential insights, and think of new ideas
solutions are often not long! think of obvious and short approaches, with an elegant insight
look at constraints, insights often from the constraints
brute force for small test cases, try it out with pen and paper to see patterns too
focus on getting 2 questions correctly

2020 ---

round 1a
a - saw the main idea, but tried to solve the hard version of the problem...
I tried solving "find the smallest word that satisfies the constraints"
as opposed to construct a word that works, which is easily doable within constraints
b - constructing a number -> think about binary tricks
c - bfs, simulation, clever linked list, hard af

round 1b upsolve
a - recursive, invariant
d - bsearch
c - invariant (sort of recursive too)

round 1c
a - bfs, simulation
b - intuition / prob, clutch
c - gcd/lcm, bsearch, greedy, hard af


round 2
a - rekt by floating precision -> either check for off-by-one around result or binary search for it
also, whenever you need to find the (first) number within a range that satisfies a property, it's for sure bsearch

recursion + invariant pops up a lot, think of this when there seem to be recursive or invariant structures
bfs + simulation pops up a lot, think of this when there are transitions or steps

2021 ---
round 1c
a - easy, just need to be careful with edge cases, always ask "how could this go wrong?"
b - bsearch, need to be clever on stuff to iterate on before bsearch
c - greedy casework

considerations ---
always look at constraints
dp - iterative vs recursive
pypy for speed -- use `from __future__import print_function` and replace `input()` with `raw_input()` just copy:
  ```
  from __future__ import print_function
  input = raw_input
  ```
  to the top of the file
floating point accuracy
sys.setrecursionlimit(1000000000) on big dp problems if RE
use raise Exception("") and assert to catch unhandled / impossible cases

interactive problems ---
`python3 interactive_runner.py python3 run_b.py 0 -- python3 b.py`
